name: Job Conditionals

on:
  push:
    branches-ignore:
      - live
      - main

jobs:
  a:
    name: a
    if: true
    runs-on: ubuntu-latest

    steps:
      - run: echo "Hello world"
  b:
    name: b
    if: true
    runs-on: ubuntu-latest

    steps:
      - run: echo "Hello world"
      # - name: Try to fail
      #   run: exit 1
  c:
    name: c
    if: true
    runs-on: ubuntu-latest

    steps:
      - run: echo "Hello world"
      # - name: Try to fail
      #   run: exit 1

  # default:
  #   needs: [a, b, c]
  #   if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
  #   runs-on: ubuntu-latest

  #   steps:
  #     - run: echo "Hello world"

  # always-no-contains-failure:
  #   needs: [a, b, c]
  #   if: ${{ always() && !(contains(needs.*.result, 'failure')) }}
  #   runs-on: ubuntu-latest

  #   steps:
  #     - run: echo "Hello world"

  # no-contain-failure:
  #   needs: [a, b, c]
  #   if: ${{  !(contains(needs.*.result, 'failure')) }}
  #   runs-on: ubuntu-latest

  #   steps:
  #     - run: echo "Hello world"

  # no-failure:
  #   needs: [a, b, c]
  #   if: ${{  !failure() }}
  #   runs-on: ubuntu-latest

  #   steps:
  #     - run: echo "Hello world"

  # always-success-no-failure:
  #   needs: [a, b, c]
  #   runs-on: ubuntu-latest
  #   if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
  #   steps:
  #     - run: echo ${{needs.a.result}}
  #     - run: echo ${{needs.b.result}}
  #     - run: echo ${{needs.c.result}}

  always:
    name: always
    needs: [a, b, c]
    if: ${{  always() }}
    runs-on: ubuntu-latest

    steps:
      - run: echo "Hello world"
      - run: echo ${{needs.a.result}}
      - run: echo ${{needs.b.result}}
      - run: echo ${{needs.c.result}}

  after-always:
    name: after-always
    needs: [always]
    if: ${{ always() && !(contains(needs.*.result, 'skipped')) }}
    runs-on: ubuntu-latest

    steps:
      - run: echo "Hello world"
      - run: echo ${{needs.always.result}}
      - run: echo "${{ toJSON(needs) }}"


  side:
    name: side
    runs-on: ubuntu-latest
    if: false
    steps:
      - run: echo "Hello world"

  side-1:
    name: side-1
    needs: [side]
    runs-on: ubuntu-latest

    steps:
      - run: echo "Hello world"

  side-2:
    name: side-2
    needs: [side-1]
    runs-on: ubuntu-latest

    steps:
      - run: echo "Hello world"
  

